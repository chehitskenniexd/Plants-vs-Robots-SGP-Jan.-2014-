<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:double="http://www.intel.com/2001/XMLSchema#double" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <name>%AdvancedHotspotsAtypeName</name>
  <shortName>%AdvancedHotspotsAtypeShortName</shortName>
  <description>%AdvancedHotspotsAtypeDescription</description>
  <abbreviation>ah</abbreviation>
  <alias>advanced-hotspots</alias>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">configs.analysis_type-adv_hotspots_f1176</property>
 </internal>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="">
  <doubleKnob id="samplingInterval" displayName="%SamplingInterval" cliName="sampling-interval" boolean:visible="true">
   <description>%SamplingIntervalDescription</description>
   <double:min>0.01</double:min>
   <double:max>1000</double:max>
   <double:defaultValue>1</double:defaultValue>
  </doubleKnob>
  <groupKnob id="groupForCustomControl">
   <knobProperty name="knob_control_id">RadioButtonGroup</knobProperty>
   <knobs>
    <enumKnob id="collectionDetailLevel" displayName="%CollectionDetailLevel" cliName="collection-detail" boolean:visible="true">
     <description>%CollectionDetailLevelDescription</description>
     <values>
      <value displayName="%LightweightSampling" cliName="hotspots-sampling">hotspots-sampling</value>
      <value displayName="%StackSampling" cliName="stack-sampling">stack-sampling</value>
      <value displayName="%StackSamplingWithCallCount" cliName="stack-and-callcount">stack-and-callcount</value>
      <defaultValue>hotspots-sampling</defaultValue>
     </values>
    </enumKnob>
   </knobs>
  </groupKnob>
  <enumKnob id="eventCollectionMode" displayName="%EventMode" boolean:visible="true" cliName="event-mode">
   <description>%EventModeDescription</description>
   <values>
    <value displayName="%EventModeAll">all</value>
    <value displayName="%EventModeUser">user</value>
    <value displayName="%EventModeOs">os</value>
    <defaultValue>all</defaultValue>
   </values>
  </enumKnob>
  <booleanKnob id="userTasksCollection" displayName="%UserTasksCollection" boolean:visible="true" cliName="enable-user-tasks">
   <description>%UserTasksCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="gpuCountersCollection" displayName="%GpuCountersCollection" boolean:visible="false" cliName="gpu-counters-mode">
   <description>%GpuCountersCollectionDescription</description>
   <values>
    <value displayName="%None">none</value>
    <value displayName="%GpuPreset1">overview</value>
    <value displayName="%GpuPreset2">global-local-accesses</value>
    <defaultValue>none</defaultValue>
   </values>
  </enumKnob>
  <rule>
   <xsl:if test="$OS='Windows' or ($OS='Android' and exsl:is_experimental('gpu-metrics2'))">
    <enumKnob idToOverwrite="gpuCountersCollection" boolean:visible="true"/>
   </xsl:if>
  </rule>
  <intKnob id="gpuSamplingInterval" displayName="%GpuSamplingInterval" boolean:visible="false" cliName="gpu-sampling-interval">
   <description>%GpuSamplingIntervalDescription</description>
   <int:min>10</int:min>
   <int:max>10000</int:max>
   <int:defaultValue>1000</int:defaultValue>
  </intKnob>
  <booleanKnob id="gpuDXCollection" displayName="%GpuDXCollection" boolean:visible="false" cliName="gpu-dx-mode">
   <description>%GpuDXCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <rule>
   <ruleExpr>$OS == Windows</ruleExpr>
   <booleanKnob idToOverwrite="gpuDXCollection" boolean:visible="true"/>
  </rule>
  <booleanKnob id="igfxFtraceEventsCollection" displayName="%IGFXFtraceEventsCollection" boolean:visible="false" cliName="enable-igfx-ftrace">
   <description>%IGFXFtraceEventsCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
   <experimental>gpu-ftrace</experimental>
  </booleanKnob>
  <rule>
   <ruleExpr>$OS != Windows</ruleExpr>
   <booleanKnob idToOverwrite="igfxFtraceEventsCollection" boolean:visible="true"/>
  </rule>
  <booleanKnob id="gpuOpenCLCollection" displayName="%GpuOpenCLCollection" boolean:visible="false" cliName="enable-gpu-opencl">
   <description>%GpuOpenCLCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <rule>
   <ruleExpr>$OS == Windows</ruleExpr>
   <booleanKnob idToOverwrite="gpuOpenCLCollection" boolean:visible="true"/>
  </rule>
  <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
   <defaultValue>%LightweightHotspotsViewpointName</defaultValue>
  </stringKnob>
 </knobs>
 <analysis xsl:version="1.0">
  <collector id="runsa">
   <collectorKnob knob="collectUserTasksMode">$userTasksCollection</collectorKnob>
   <collectorKnob knob="gpuCounters">$gpuCountersCollection</collectorKnob>
   <collectorKnob knob="gpuSamplingInterval">$gpuSamplingInterval</collectorKnob>
   <collectorKnob knob="gpuDX">$gpuDXCollection</collectorKnob>
   <collectorKnob knob="igfxFtraceEvents">$igfxFtraceCollection</collectorKnob>
   <collectorKnob knob="collectGpuOpenCl">$gpuOpenCLCollection</collectorKnob>
   <collectorKnob knob="eventMode">$eventCollectionMode</collectorKnob>
   <xsl:if test="$collectionDetailLevel='hotspots-sampling'">
    <boolean:collectorKnob knob="enableVTSSCollection">false</boolean:collectorKnob>
    <boolean:collectorKnob knob="collectCallCounts">false</boolean:collectorKnob>
   </xsl:if>
   <xsl:if test="$collectionDetailLevel='stack-sampling'">
    <boolean:collectorKnob knob="enableVTSSCollection">true</boolean:collectorKnob>
    <boolean:collectorKnob knob="collectCallCounts">false</boolean:collectorKnob>
   </xsl:if>
   <xsl:if test="$collectionDetailLevel='stack-and-callcount'">
    <boolean:collectorKnob knob="enableVTSSCollection">true</boolean:collectorKnob>
    <boolean:collectorKnob knob="collectCallCounts">true</boolean:collectorKnob>
   </xsl:if>
   <boolean:collectorKnob knob="cpuGpuUsageData">true</boolean:collectorKnob>
  </collector>
  <xsl:variable name="SAV" select="format-number(round($referenceFrequency * ($samplingInterval div 1000)), '#')"/>
  <rule>
   <ruleExpr>$PMU != null</ruleExpr>
   <rule>
    <ruleExpr>$PMU == core</ruleExpr>
    <collector idToAppend="runsa">
     <collectorKnob knob="pmuEventConfig">
      <xsl:text>CPU_CLK_UNHALTED:sa=</xsl:text>
      <xsl:value-of select="$SAV"/>
     </collectorKnob>
    </collector>
    <else>
     <rule>
      <ruleExpr>$PMU == nhm</ruleExpr>
      <ruleExpr>$PMU == corei7</ruleExpr>
      <ruleExpr>$PMU == corei7wsp</ruleExpr>
      <ruleExpr>$PMU == corei7wdp</ruleExpr>
      <ruleExpr>$PMU == corei7b</ruleExpr>
      <collector idToAppend="runsa">
       <collectorKnob knob="pmuEventConfig">
        <xsl:text>CPU_CLK_UNHALTED.THREAD:sa=</xsl:text>
        <xsl:value-of select="$SAV"/>
        <xsl:text>,CPU_CLK_UNHALTED.REF_P:sa=</xsl:text>
        <xsl:value-of select="round(133000000 * ($samplingInterval div 1000))"/>
        <xsl:text>,INST_RETIRED.ANY:sa=</xsl:text>
        <xsl:value-of select="$SAV"/>
       </collectorKnob>
      </collector>
      <else>
       <rule>
        <ruleExpr>$PMU == atom</ruleExpr>
        <ruleExpr>$PMU == core2</ruleExpr>
        <ruleExpr>$PMU == core2p</ruleExpr>
        <collector idToAppend="runsa">
         <collectorKnob knob="pmuEventConfig">
          <xsl:text>CPU_CLK_UNHALTED.CORE:sa=</xsl:text>
          <xsl:value-of select="$SAV"/>
          <xsl:text>,CPU_CLK_UNHALTED.REF:sa=</xsl:text>
          <xsl:value-of select="$SAV"/>
          <xsl:text>,INST_RETIRED.ANY:sa=</xsl:text>
          <xsl:value-of select="$SAV"/>
         </collectorKnob>
        </collector>
        <else>
         <rule>
          <ruleExpr>$PMU == silvermont</ruleExpr>
          <collector idToAppend="runsa">
           <collectorKnob knob="pmuEventConfig">
            <xsl:text>CPU_CLK_UNHALTED.CORE:sa=</xsl:text>
            <xsl:value-of select="$SAV"/>
            <xsl:text>,CPU_CLK_UNHALTED.REF_TSC:sa=</xsl:text>
            <xsl:value-of select="$SAV"/>
            <xsl:text>,INST_RETIRED.ANY:sa=</xsl:text>
            <xsl:value-of select="$SAV"/>
           </collectorKnob>
          </collector>
          <else>
           <collector idToAppend="runsa">
            <collectorKnob knob="pmuEventConfig">
             <xsl:text>CPU_CLK_UNHALTED.THREAD:sa=</xsl:text>
             <xsl:value-of select="$SAV"/>
             <xsl:text>,CPU_CLK_UNHALTED.REF_TSC:sa=</xsl:text>
             <xsl:value-of select="$SAV"/>
             <xsl:text>,INST_RETIRED.ANY:sa=</xsl:text>
             <xsl:value-of select="$SAV"/>
            </collectorKnob>
           </collector>
          </else>
         </rule>
        </else>
       </rule>
      </else>
     </rule>
    </else>
   </rule>
  </rule>
 </analysis>
</bag>
